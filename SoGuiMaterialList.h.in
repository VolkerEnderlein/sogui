/**************************************************************************\
 *
 *  This file is part of the Coin 3D visualization library.
 *  Copyright (C) 1998-2005 by Systems in Motion.  All rights reserved.
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  ("GPL") version 2 as published by the Free Software Foundation.
 *  See the file LICENSE.GPL at the root directory of this source
 *  distribution for additional information about the GNU GPL.
 *
 *  For using Coin with software that can not be combined with the GNU
 *  GPL, and for taking advantage of the additional benefits of our
 *  support services, please contact Systems in Motion about acquiring
 *  a Coin Professional Edition License.
 *
 *  See <URL:http://www.coin3d.org/> for more information.
 *
 *  Systems in Motion, Postboks 1283, Pirsenteret, 7462 Trondheim, NORWAY.
 *  <URL:http://www.sim.no/>.
 *
\**************************************************************************/

#ifndef SO@GUI@_MATERIALLIST_H
#define SO@GUI@_MATERIALLIST_H

#include <Inventor/@Gui@/So@Gui@Component.h>

class SoMaterial;
class SoAnyMaterialList;

typedef void So@Gui@MaterialListCB(void * closure, const SoMaterial * material);

// *************************************************************************

class SO@GUI@_DLL_API So@Gui@MaterialList : public So@Gui@Component {
  SO@GUI@_OBJECT_HEADER(So@Gui@MaterialList, So@Gui@Component);

public:
  So@Gui@MaterialList(
    @WIDGET@ parent = NULL,
    const char * const name = NULL,
    SbBool embed = TRUE,
    const char * const dir = NULL);
  ~So@Gui@MaterialList(void);

  void addCallback(
    So@Gui@MaterialListCB * const callback,
    void * const closure = NULL);
  void removeCallback(
    So@Gui@MaterialListCB * const callback,
    void * const closure = NULL);

protected:
  So@Gui@MaterialList(
    @WIDGET@ parent,
    const char * const name,
    SbBool embed,
    const char * const dir,
    SbBool build);

  virtual const char * getDefaultWidgetName(void) const;
  virtual const char * getDefaultTitle(void) const;
  virtual const char * getDefaultIconTitle(void) const;

  @WIDGET@ buildWidget(@WIDGET@ parent);
  @WIDGET@ buildPulldownMenu(@WIDGET@ parent);

private:
  void constructor(const char * const dir, const SbBool build);

  // FIXME: remove all this and set it up for use with a
  // SoGuiMaterialListP class. 2001???? larsa.

  void selectionCallback(int i);
  static void selection_cb(@WIDGET@, void *, void *);

  void paletteMenuCallback(@WIDGET@);
  static void palette_menu_cb(@WIDGET@, void *, void *);


#ifdef __COIN_SOGTK__
  void menuactivation(GtkWidget * menuitem);
  static void menuactivationCB(GtkObject * obj, gpointer closure);

  void itemactivation(int item);
  static void itemactivationCB(GtkObject * obj, gint row, gint column,
                               GdkEvent * event, gpointer closure);
#endif // __COIN_SOGTK__

  @WIDGET@ listwidget;

  SoAnyMaterialList * common;

}; // public So@Gui@MaterialList

// *************************************************************************

#endif // ! SO@GUI@_MATERIALLIST_H
