/**************************************************************************
 *
 *  This file is part of the Coin GUI binding libraries.
 *  Copyright (C) 2000 by Systems in Motion.  All rights reserved.
 *
 *  The libraries this file is part of is free software; you can
 *  redistribute them and/or modify them under the terms of the GNU
 *  Lesser General Public License version 2.1 as published by the
 *  Free Software Foundation.  See the file LICENSE.LGPL at the root
 *  directory of the distribution for all the details.
 *
 *  If you want to use the Coin GUI binding libraries for applications
 *  not compatible with the LGPL, contact SIM about acquiring a
 *  Professional Edition License.
 *
 *  Systems in Motion, Prof Brochs gate 6, N-7030 Trondheim, NORWAY
 *  http://www.sim.no/ support@sim.no Voice: +47 22114160 Fax: +47 22207097
 *
 **************************************************************************/

// @configure_input@
// $Id$

#ifndef SOANY_STATESTACK_H
#define SOANY_STATESTACK_H

// *************************************************************************

class SbPList;

typedef void SoAnyStateChangeCB( void * user, int newstate, int oldstate );

class SoAnyStateStack {
public:
  SoAnyStateStack(void);
  ~SoAnyStateStack(void);

  void setDefaultState( const int state );

//  newModifier();
//  newState();
//  setStateModifierReqs();
//  setModifierEnabled();

  int getCurrentState(void) const;

  void addStateChangeCallback(
    SoAnyStateChangeCB * callback, void * user = NULL );
  void removeStateChangeCallback(
    SoAnyStateChangeCB * callback, void * user = NULL );
  void addStateEnterCallback(
    int state, SoAnyStateChangeCB * callback, void * user = NULL );
  void removeStateEnterCallback(
    int state, SoAnyStateChangeCB * callback, void * user = NULL );
  void addStateExitCallback(
    int state, SoAnyStateChangeCB * callback, void * user = NULL );
  void removeStateExitCallback(
    int state, SoAnyStateChangeCB * callback, void * user = NULL );

protected:
  void invokeTransitionCallbacks(
    const int oldstate, const int newstate ) const;

private:
  int defaultstate;
  SbPList * states;
  SbPList * callbacks;

}; // class SoAnyStateStack

// *************************************************************************

#endif // ! SOANY_STATESTACK_H
