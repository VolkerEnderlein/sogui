/**************************************************************************\
 *
 *  This file is part of the Coin family of 3D visualization libraries.
 *  Copyright (C) 1998-2003 by Systems in Motion.  All rights reserved.
 *
 *  This library is free software; you can redistribute it and / or
 *  modify it under the terms of the GNU General Public License
 *  version 2 as published by the Free Software Foundation.  See the
 *  file LICENSE.GPL at the root directory of this source distribution
 *  for more details.
 *
 *  If you desire to use this library in software that is incompatible
 *  with the GNU GPL, and / or you would like to take advantage of the
 *  additional benefits with regard to our support services, please
 *  contact Systems in Motion about acquiring a Coin Professional
 *  Edition License.  See <URL:http://www.coin3d.org> for more
 *  information.
 *
 *  Systems in Motion, Abels gate 5, Teknobyen, 7030 Trondheim, NORWAY
 *  <URL:http://www.sim.no>, <mailto:support@sim.no>
 *
\**************************************************************************/

// @configure_input@

#ifndef SO@GUI@_FLYVIEWER_H
#define SO@GUI@_FLYVIEWER_H

#include <Inventor/@Gui@/viewers/So@Gui@ConstrainedViewer.h>

// ************************************************************************

class SO@GUI@_DLL_API So@Gui@FlyViewer : public So@Gui@ConstrainedViewer {
  SO@GUI@_OBJECT_HEADER(So@Gui@FlyViewer, So@Gui@ConstrainedViewer);

public:
  So@Gui@FlyViewer(@WIDGET@ parent = NULL,
                   const char * name = NULL, 
                   SbBool embed = TRUE, 
                   So@Gui@FullViewer::BuildFlag flag = BUILD_ALL,
                   So@Gui@Viewer::Type type = BROWSER);
  ~So@Gui@FlyViewer();

  virtual void setViewing(SbBool enable);
  virtual void viewAll(void);
  virtual void resetToHomePosition(void);
  virtual void setCamera(SoCamera * camera);
  virtual void setCursorEnabled(SbBool enable);
  virtual void setCameraType(SoType type);

protected:
  So@Gui@FlyViewer(@WIDGET@ parent,
                   const char * const name, 
                   SbBool embed, 
                   So@Gui@FullViewer::BuildFlag flag, 
                   So@Gui@Viewer::Type type, 
                   SbBool build);

  virtual const char * getDefaultWidgetName(void) const;
  virtual const char * getDefaultTitle(void) const;
  virtual const char * getDefaultIconTitle(void) const;

  virtual SbBool processSoEvent(const SoEvent * const event);
  virtual void setSeekMode(SbBool enable);
  virtual void actualRedraw(void);

  virtual void rightWheelMotion(float value);

  virtual void afterRealizeHook(void);

private:
  class So@Gui@FlyViewerP * pimpl;
  friend class So@Gui@FlyViewerP;
};

// ************************************************************************

#endif // ! SO@GUI@_FLYVIEWER_H
