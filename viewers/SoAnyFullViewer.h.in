/**************************************************************************
 *
 *  This file is part of the Coin GUI binding libraries.
 *  Copyright (C) 2000 by Systems in Motion.  All rights reserved.
 *
 *  The libraries this file is part of is free software; you can
 *  redistribute them and/or modify them under the terms of the GNU
 *  Lesser General Public License version 2.1 as published by the
 *  Free Software Foundation.  See the file LICENSE.LGPL at the root
 *  directory of the distribution for all the details.
 *
 *  If you want to use the Coin GUI binding libraries for applications
 *  not compatible with the LGPL, contact SIM about acquiring a
 *  Professional Edition License.
 *
 *  Systems in Motion, Prof Brochs gate 6, N-7030 Trondheim, NORWAY
 *  http://www.sim.no/ support@sim.no Voice: +47 22114160 Fax: +47 22207097
 *
 **************************************************************************/

// @configure_input@
// $Id$

#ifndef SOANY_FULLVIEWER_H
#define SOANY_FULLVIEWER_H

#include <Inventor/@Gui@/viewers/So@Gui@Viewer.h>

class SoEvent;
class So@Gui@PopupMenu;
class So@Gui@FullViewer;

enum SoAnyFullViewerPopupMenuItem {
  // FIXME: there's code in (some of) the popupmenu widgets which
  // assumes the root id is equal to 0.  Yup, lousy design. :-/
  // Anyway, don't change it until those cases are fixed.
  // 20010810 mortene.
  ROOT_MENU = 0,
  ROOT_MENU_TITLE,

  FUNCTIONS_MENU,
  HELP_ITEM,
  HOME_ITEM,
  SET_HOME_ITEM,
  VIEW_ALL_ITEM,
  SEEK_ITEM,
  COPY_VIEW_ITEM,
  PASTE_VIEW_ITEM,

  DRAWSTYLES_MENU,
  DRAWSTYLES_STILL_MENU,
  AS_IS_ITEM,
  HIDDEN_LINE_ITEM,
  WIREFRAME_OVERLAY_ITEM,
  NO_TEXTURE_ITEM,
  LOW_RESOLUTION_ITEM,
  WIREFRAME_ITEM,
  POINTS_ITEM,
  BOUNDING_BOX_ITEM,

  DRAWSTYLES_ANIMATING_MENU,
  MOVE_SAME_AS_STILL_ITEM,
  MOVE_NO_TEXTURE_ITEM,
  MOVE_LOW_RES_ITEM,
  MOVE_WIREFRAME_ITEM,
  MOVE_LOW_RES_WIREFRAME_ITEM,
  MOVE_POINTS_ITEM,
  MOVE_LOW_RES_POINTS_ITEM,
  MOVE_BOUNDING_BOX_ITEM,

  TRANSPARENCY_TYPE_MENU,
  SCREEN_DOOR_TRANSPARENCY_ITEM,
  ADD_TRANSPARENCY_ITEM,
  DELAYED_ADD_TRANSPARENCY_ITEM,
  SORTED_OBJECT_ADD_TRANSPARENCY_ITEM,
  BLEND_TRANSPARENCY_ITEM,
  DELAYED_BLEND_TRANSPARENCY_ITEM,
  SORTED_OBJECT_BLEND_TRANSPARENCY_ITEM,
  // These two are Coin extensions.
  SORTED_OBJECT_SORTED_TRIANGLE_ADD_TRANSPARENCY_ITEM,
  SORTED_OBJECT_SORTED_TRIANGLE_BLEND_TRANSPARENCY_ITEM,

  RENDER_BUFFER_TYPE_MENU,
  SINGLE_BUFFER_ITEM,
  DOUBLE_BUFFER_ITEM,
  INTERACTIVE_BUFFER_ITEM,

  EXAMINING_ITEM,
  DECORATION_ITEM,
  HEADLIGHT_ITEM,
  FULLSCREEN_ITEM,
  PREFERENCES_ITEM,

  STEREO_MENU,
  STEREO_OFF_ITEM,
  STEREO_ANAGLYPH_ITEM,
  STEREO_QUADBUFFER_ITEM
}; // enum SoViewerPopupMenuItem

enum SoViewerPopupMenuRadioGroup {
  STILL_GROUP = 1,
  MOVE_GROUP,
  TRANSPARENCY_GROUP,
  BUFFER_GROUP,
  STEREO_GROUP
}; // enum SoViewerPopupMenuRadioGroup

// ************************************************************************

class SoAnyFullViewer {
public:
  SoAnyFullViewer(So@Gui@FullViewer * const v);
  ~SoAnyFullViewer(void);

  So@Gui@PopupMenu * setupStandardPopupMenu(void);
  void prepareMenu(So@Gui@PopupMenu * menu);
  void setPopupMenuString(const char * title);

  void setDrawStyleMenuActivation(
    So@Gui@Viewer::DrawType type,
    So@Gui@Viewer::DrawStyle value);

  void drawstyleActivated(int menuitemid);

  void menuSelection(int menuitemid);
  static void menuSelectionCallback(int menuitemid, void * userdata);

  SbBool processSoEvent(const SoEvent * const event);

private:
  So@Gui@FullViewer * const viewer;
  So@Gui@PopupMenu * prefmenu;
  SbString popupmenutitle;

}; // class SoAnyFullViewer

// ************************************************************************

#endif // ! SOANY_FULLVIEWER_H
