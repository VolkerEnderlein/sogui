/**************************************************************************
 *
 *  This file is part of the Coin So@Gui@ GUI binding library.
 *  Copyright (C) 1998-2000 by Systems in Motion.  All rights reserved.
 *
 *  This library is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License version
 *  2.1 as published by the Free Software Foundation.  See the file
 *  LICENSE.LGPL at the root directory of the distribution for all the
 *  details.
 *
 *  If you want to use Coin So@Gui@ for applications not compatible with the
 *  LGPL, please contact SIM to acquire a Professional Edition License.
 *
 *  Systems in Motion, Prof Brochs gate 6, N-7030 Trondheim, NORWAY
 *  http://www.sim.no/ support@sim.no Voice: +47 22114160 Fax: +47 22207097
 *
 **************************************************************************/

// $Id$

#ifndef SO@GUI@_FULLVIEWER_H
#define SO@GUI@_FULLVIEWER_H

#include <Inventor/@Gui@/viewers/So@Gui@Viewer.h>

class So@Gui@PopupMenu;
class SoAnyFullViewer;

// *************************************************************************

class SO@GUI@_DLL_API So@Gui@FullViewer : public So@Gui@Viewer {
  SO@GUI@_OBJECT_ABSTRACT_HEADER(So@Gui@FullViewer, So@Gui@Viewer);
  friend class SoAnyFullViewer;
  @COMPONENTHEADER@

public:
  enum BuildFlag {
    BUILD_NONE       = 0x00,
    BUILD_DECORATION = 0x01,
    BUILD_POPUP      = 0x02,
    BUILD_ALL        = (BUILD_DECORATION | BUILD_POPUP)
  };

  void setDecoration(const SbBool on);
  SbBool isDecoration(void) const;

  void setPopupMenuEnabled(const SbBool on);
  SbBool isPopupMenuEnabled(void) const;

  @WIDGET@ getAppPushButtonParent(void) const;
  void addAppPushButton(@WIDGET@ newButton);
  void insertAppPushButton(@WIDGET@ newButton, int index);
  void removeAppPushButton(@WIDGET@ oldButton);
  int findAppPushButton(@WIDGET@ oldButton) const;
  int lengthAppPushButton(void) const;

  @WIDGET@ getRenderAreaWidget(void) const;

  // internal
  // These are overloaded to update user interface components.
  virtual void setViewing(SbBool on);
  virtual void setCamera(SoCamera * cam);
  virtual void hide(void);

  virtual void setComponentCursor(const So@Gui@Cursor & cursor);

protected:
  So@Gui@FullViewer(
    @WIDGET@ parent,
    const char * name,
    SbBool embed,
    BuildFlag flag,
    Type type,
    SbBool build);
  ~So@Gui@FullViewer(void);

#ifdef __COIN_SOQT__ // FIXME: get rid of non-templatized code. 20020108 mortene.
  virtual bool eventFilter(QObject * obj, QEvent * e);
  virtual void afterRealizeHook(void);
  virtual @WIDGET@ makeSubPreferences(@WIDGET@ parent);
#endif // __COIN_SOQT__

#ifdef __COIN_SOXT__ // FIXME: get rid of non-templatized code. 20020108 mortene.
  Widget buildAppButtonsForm(Widget parent);

  Widget buildFunctionsSubmenu(Widget popup);
  Widget buildDrawStyleSubmenu(Widget popup);

  static void leftWheelStartCB(Widget, XtPointer, XtPointer);
  static void leftWheelMotionCB(Widget, XtPointer, XtPointer);
  static void leftWheelFinishCB(Widget, XtPointer, XtPointer);

  static void bottomWheelStartCB(Widget, XtPointer, XtPointer);
  static void bottomWheelMotionCB(Widget, XtPointer, XtPointer);
  static void bottomWheelFinishCB(Widget, XtPointer, XtPointer);

  static void rightWheelStartCB(Widget, XtPointer, XtPointer);
  static void rightWheelMotionCB(Widget, XtPointer, XtPointer);
  static void rightWheelFinishCB(Widget, XtPointer, XtPointer);

  char * prefstring;
  char * popupTitle;
  SbBool popupEnabled;
  SbPList * viewerButtonWidgets;

  Pixmap createPixmapFromXpmData(Widget button, char ** xpm);
  Pixmap createInsensitivePixmapFromXpmData(Widget button, char ** xpm);
  Widget prefshell;
  Widget prefsheet;

  virtual void createPrefSheet(void);
  void createPrefSheetShellAndForm(Widget & shell, Widget & form);
  void createDefaultPrefSheetParts(Widget * widgets, int & num, Widget form);
  void layoutPartsAndMapPrefSheet(Widget * widgets, int num, Widget form, Widget shell);

  Widget createSeekPrefSheetGuts(Widget parent);
  Widget createSeekDistPrefSheetGuts(Widget parent);
  Widget createZoomPrefSheetGuts(Widget parent);
  Widget createClippingPrefSheetGuts(Widget parent);
  Widget createStereoPrefSheetGuts(Widget parent);
  Widget createSpeedPrefSheetGuts(Widget parent);

  Widget createFramedSeekPrefSheetGuts(Widget parent);
  Widget createFramedSeekDistPrefSheetGuts(Widget parent);
  Widget createFramedZoomPrefSheetGuts(Widget parent);
  Widget createFramedClippingPrefSheetGuts(Widget parent);
  Widget createFramedStereoPrefSheetGuts(Widget parent);
  Widget createFramedSpeedPrefSheetGuts(Widget parent);

  void prefSheetDestroy(void);
  static void prefSheetDestroyCB(Widget, XtPointer, XtPointer);
  void seekPrefSheetField(void);
  static void seekPrefSheetFieldCB(Widget, XtPointer, XtPointer);
  void seekPrefSheetToggle1(void);
  static void seekPrefSheetToggle1CB(Widget, XtPointer, XtPointer);
  void seekPrefSheetToggle2(void);
  static void seekPrefSheetToggle2CB(Widget, XtPointer, XtPointer);
#endif // __COIN_SOXT__

  virtual void sizeChanged(const SbVec2s & size);

  @WIDGET@ buildWidget(@WIDGET@ parent);

  virtual void buildDecoration(@WIDGET@ parent);
  virtual @WIDGET@ buildLeftTrim(@WIDGET@ parent);
  virtual @WIDGET@ buildBottomTrim(@WIDGET@ parent);
  virtual @WIDGET@ buildRightTrim(@WIDGET@ parent);
  @WIDGET@ buildAppButtons(@WIDGET@ parent);
  @WIDGET@ buildViewerButtons(@WIDGET@ parent);
  virtual void createViewerButtons(@WIDGET@ parent, SbPList * buttonlist);

  virtual void buildPopupMenu(void);
  void setPopupMenuString(const char * title);
  void openPopupMenu(const SbVec2s position);

  void setPrefSheetString(const char * title);

  virtual void leftWheelStart(void);
  virtual void leftWheelMotion(float);
  virtual void leftWheelFinish(void);
  float getLeftWheelValue(void) const;
  void setLeftWheelValue(const float value);

  virtual void bottomWheelStart(void);
  virtual void bottomWheelMotion(float);
  virtual void bottomWheelFinish(void);
  float getBottomWheelValue(void) const;
  void setBottomWheelValue(const float value);

  virtual void rightWheelStart(void);
  virtual void rightWheelMotion(float);
  virtual void rightWheelFinish(void);
  float getRightWheelValue(void) const;
  void setRightWheelValue(const float value);

  void setLeftWheelString(const char * const name);
  @WIDGET@ getLeftWheelLabelWidget(void) const;
  void setBottomWheelString(const char * const name);
  @WIDGET@ getBottomWheelLabelWidget(void) const;
  void setRightWheelString(const char * const name);
  @WIDGET@ getRightWheelLabelWidget(void) const;

  virtual SbBool processSoEvent(const SoEvent * const event);

  virtual void openViewerHelpCard(void);

protected:
  @WIDGET@ leftDecoration;
  @WIDGET@ rightDecoration;
  @WIDGET@ bottomDecoration;

  @WIDGET@ leftWheel;
  @WIDGET@ leftWheelLabel;
  char * leftWheelStr;
  float leftWheelVal;

  @WIDGET@ rightWheel;
  @WIDGET@ rightWheelLabel;
  char * rightWheelStr;
  float rightWheelVal;

  @WIDGET@ bottomWheel;
  @WIDGET@ bottomWheelLabel;
  char * bottomWheelStr;
  float bottomWheelVal;

  So@Gui@PopupMenu * prefmenu;


#ifdef __COIN_SOQT__ // FIXME: get rid of non-templatized code. 20020108 mortene.
private:
  @WIDGET@ makePreferencesWindow(void);
  @WIDGET@ makeSeekPreferences(@WIDGET@ parent);
  @WIDGET@ makeSeekDistancePreferences(@WIDGET@ parent);
  @WIDGET@ makeZoomPreferences(@WIDGET@ parent);
  @WIDGET@ makeAutoclipPreferences(@WIDGET@ parent);

  void showDecorationWidgets(SbBool onOff);

  void layoutAppButtons(@WIDGET@ form);

  void setCameraZoom(const float zoom);
  float getCameraZoom(void);
  void setZoomSliderPosition(float zoom);
  void setZoomFieldString(float zoom);

  void setEnabledClippingWidgets(SbBool flag);

private slots:
  // Thumbwheels.
  void leftWheelPressed(void);
  void leftWheelChanged(float value);
  void leftWheelReleased(void);
  void rightWheelPressed(void);
  void rightWheelChanged(float value);
  void rightWheelReleased(void);
  void bottomWheelPressed(void);
  void bottomWheelChanged(float value);
  void bottomWheelReleased(void);

  // Button row.
  void interactbuttonClicked();
  void viewbuttonClicked();
  void helpbuttonClicked();
  void homebuttonClicked();
  void sethomebuttonClicked();
  void viewallbuttonClicked();
  void seekbuttonClicked();

  // Menu items.
  void selectedViewing();
  void selectedDecoration();
  void selectedHeadlight();
  void copyviewSelected();
  void pasteviewSelected();
  void selectedPrefs();

  // Pref sheet.
  //  seek settings
  void seekAnimationTimeChanged(const char *);
  void seekAnimationTimeChanged(const QString &);
  void seekDetailToggled(int id);
  void seekDistanceWheelChanged(float);
  void seekDistanceEdit();
  void seekDistanceTypeToggle(int id);
  //  zoom settings
  void zoomSliderMoved(int val);
  void zoomFieldChanged();
  void zoomRangeChanged1();
  void zoomRangeChanged2();
  //  clipping settings
  void clippingToggled(bool flag);
  void nearclippingwheelMoved(float val);
  void farclippingwheelMoved(float val);
  void nearclipEditPressed();
  void farclipEditPressed();

  // Generic slots.
  void increaseInteractiveCount();
  void decreaseInteractiveCount();
#endif // __COIN_SOQT__

#ifdef __COIN_SOXT__ // FIXME: get rid of non-templatized code. 20020108 mortene.
private:
  void selectedViewing(void);
  void selectedDecoration(void);
  void selectedHeadlight(void);
  void selectedPrefs(void);
  void interactbuttonClicked(Boolean set);
  static void interactbuttonCB(Widget, XtPointer, XtPointer);
  void examinebuttonClicked(Boolean set);
  static void examinebuttonCB(Widget, XtPointer, XtPointer);
  void helpbuttonClicked(void);
  static void helpbuttonCB(Widget, XtPointer, XtPointer);
  void homebuttonClicked(void);
  static void homebuttonCB(Widget, XtPointer, XtPointer);
  void sethomebuttonClicked(void);
  static void sethomebuttonCB(Widget, XtPointer, XtPointer);
  void viewallbuttonClicked(void);
  static void viewallbuttonCB(Widget, XtPointer, XtPointer);
  void seekbuttonClicked(void);
  static void seekbuttonCB(Widget, XtPointer, XtPointer);
  void copyviewSelected(void);
  void pasteviewSelected(void);
  void drawstyleActivated(int);

  Widget seektimefield;
  Widget pointtoggle, objecttoggle;
  void seektimechanged(void);
  static void seektimechangedCB(Widget, XtPointer, XtPointer);
  void pointtoggled(void);
  static void pointtoggledCB(Widget, XtPointer, XtPointer);
  void objecttoggled(void);
  static void objecttoggledCB(Widget, XtPointer, XtPointer);
  Widget seekdistancefield;
  Widget percenttoggle, absolutetoggle;
  void seekdistancechanged(void);
  static void seekdistancechangedCB(Widget, XtPointer, XtPointer);
  void percenttoggled(void);
  static void percenttoggledCB(Widget, XtPointer, XtPointer);
  void absolutetoggled(void);
  static void absolutetoggledCB(Widget, XtPointer, XtPointer);

  SbVec2f zoomrange;
  Widget zoomfrom, zoomslider, zoomto, zoomvalue;
  void zoomfromchanged(void);
  static void zoomfromchangedCB(Widget, XtPointer, XtPointer);
  void zoomtochanged(void);
  static void zoomtochangedCB(Widget, XtPointer, XtPointer);
  void zoomsliderchanged(void);
  static void zoomsliderchangedCB(Widget, XtPointer, XtPointer);
  void zoomvaluechanged(void);
  static void zoomvaluechangedCB(Widget, XtPointer, XtPointer);

  void setCameraZoom(float zoom);
  float getCameraZoom(void);

  // clipping preferences widgets
  Widget autocliptoggle, nearwheel, farwheel, nearvalue, farvalue;

  void autocliptoggled(void);
  static void autocliptoggledCB(Widget, XtPointer, XtPointer);
  void nearwheelvaluechanged(void);
  static void nearwheelvaluechangedCB(Widget, XtPointer, XtPointer);
  void farwheelvaluechanged(void);
  static void farwheelvaluechangedCB(Widget, XtPointer, XtPointer);
  void nearvaluechanged(void);
  static void nearvaluechangedCB(Widget, XtPointer, XtPointer);
  void farvaluechanged(void);
  static void farvaluechangedCB(Widget, XtPointer, XtPointer);

  Widget stereotoggle;
  void stereotoggled(void);
  static void stereotoggledCB(Widget, XtPointer, XtPointer);

  void increaseInteractiveCount(void);
  static void increaseInteractiveCountCB(Widget, XtPointer, XtPointer);
  void decreaseInteractiveCount(void);
  static void decreaseInteractiveCountCB(Widget, XtPointer, XtPointer);

  Widget incspeedbutton, decspeedbutton;
  void speedInc(void);
  static void speedIncCB(Widget, XtPointer, XtPointer);
  void speedDec(void);
  static void speedDecCB(Widget, XtPointer, XtPointer);

  SbBool decorations;

  Widget viewerbase, canvas;

  Widget mainlayout;
  void showDecorationWidgets(SbBool enable);

  Widget appButtonsForm;
  SbPList * appButtonsList;
  void layoutAppPushButtons(Widget parent);

  Widget viewerButtonsForm;

  struct {
    Widget pick, view, help, home, set_home, view_all, seek;
  } viewerbuttons;

  struct {
    Pixmap pick, pick_ins;
    Pixmap view, view_ins;
    Pixmap help, help_ins;
    Pixmap home, home_ins;
    Pixmap set_home, set_home_ins;
    Pixmap view_all, view_all_ins;
    Pixmap seek, seek_ins;
  } pixmaps;

  struct {
    Widget leftwheel, bottomwheel, rightwheel;
  } labels;

  float seekdistance;
  SbBool seekdistaspercentage;
#endif // __COIN_SOXT__

private:
  SoAnyFullViewer * common;
  class So@Gui@FullViewerP * pimpl;
};

// *************************************************************************

#endif // ! SO@GUI@_FULLVIEWER_H
