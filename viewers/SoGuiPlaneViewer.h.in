/**************************************************************************\
 *
 *  This file is part of the Coin GUI toolkit libraries.
 *  Copyright (C) 1998-2002 by Systems in Motion.  All rights reserved.
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  version 2.1 as published by the Free Software Foundation.  See the
 *  file LICENSE.LGPL at the root directory of this source distribution
 *  for more details.
 *
 *  If you want to use this library with software that is incompatible
 *  licensewise with the LGPL, and / or you would like to take
 *  advantage of the additional benefits with regard to our support
 *  services, please contact Systems in Motion about acquiring a Coin
 *  Professional Edition License.  See <URL:http://www.coin3d.org> for
 *  more information.
 *
 *  Systems in Motion, Prof Brochs gate 6, 7030 Trondheim, NORWAY
 *  <URL:http://www.sim.no>, <mailto:support@sim.no>
 *
\**************************************************************************/

// $Id$

#ifndef SO@GUI@PLANEVIEWER_H
#define SO@GUI@PLANEVIEWER_H

#include <Inventor/@Gui@/viewers/So@Gui@FullViewer.h>

// ************************************************************************

class SO@GUI@_DLL_API So@Gui@PlaneViewer : public So@Gui@FullViewer {
  SO@GUI@_OBJECT_HEADER(So@Gui@PlaneViewer, So@Gui@FullViewer);

public:
  So@Gui@PlaneViewer(@WIDGET@ parent = NULL,
                     const char * const name = NULL, 
                     SbBool embed = TRUE, 
                     So@Gui@FullViewer::BuildFlag flag = BUILD_ALL, 
                     So@Gui@Viewer::Type type = BROWSER);
  ~So@Gui@PlaneViewer();

  virtual void setViewing(SbBool enable);
  virtual void setCamera(SoCamera * camera);
  virtual void setCursorEnabled(SbBool enable);

protected:
  So@Gui@PlaneViewer(@WIDGET@ parent,
                     const char * const name, 
                     SbBool embed, 
                     So@Gui@FullViewer::BuildFlag flag, 
                     So@Gui@Viewer::Type type, 
                     SbBool build);

  @WIDGET@ buildWidget(@WIDGET@ parent);

  virtual const char * getDefaultWidgetName(void) const;
  virtual const char * getDefaultTitle(void) const;
  virtual const char * getDefaultIconTitle(void) const;

  virtual SbBool processSoEvent(const SoEvent * const event);
  virtual void processEvent(@EVENT@ event);
  virtual void setSeekMode(SbBool enable);
  virtual void actualRedraw(void);

  virtual void bottomWheelMotion(float value);
  virtual void leftWheelMotion(float value);
  virtual void rightWheelMotion(float value);

  virtual void createPrefSheet(void);

  virtual void createViewerButtons(@WIDGET@ parent, SbPList * buttons);
  virtual void openViewerHelpCard(void);

private:
  void commonConstructor(void);

  void translateX(const float delta) const;
  void translateY(const float delta) const;
  void rotateZ(const float angle) const;

  void viewPlaneX(void) const;
  void viewPlaneY(void) const;
  void viewPlaneZ(void) const;

  void zoom(const float difference) const;

  void setCanvasSize(const SbVec2s size);
  void setPointerLocation(const SbVec2s location);
  int getPointerXMotion(void) const;
  int getPointerYMotion(void) const;
  float getPointerOrigoAngle(void) const;
  float getPointerOrigoMotionAngle(void) const;

  void drawRotateGraphics(void) const;

  enum PlaneViewerMode {
    IDLE_MODE,

    DOLLY_MODE,
    TRANSLATE_MODE,

    ROTZ_WAIT_MODE,
    ROTZ_MODE,

    SEEK_WAIT_MODE,
    SEEK_MODE
  } mode;

  void setCursorRepresentation(PlaneViewerMode mode);

  struct pointerdata {
    SbVec2s now;
    SbVec2s then;
  } pointer;
  SbVec2s canvas;

  SbBool leftcontroldown;
  SbBool rightcontroldown;
  SbBool leftshiftdown;
  SbBool rightshiftdown;
  SbBool button1down;
  SbBool button2down;
  SbBool button3down;

private:
  class So@Gui@PlaneViewerP * pimpl;
  friend class So@Gui@PlaneViewerP;

//// FIXME!: merge the remaining So*PlaneViewer definitions. 20020111 mortene.

#ifdef __COIN_SOXT__
private:
  void constructor(SbBool build);

  static struct SoXtViewerButton SoXtPlaneViewerButtons[];
  struct SoXtViewerButton * buttons;
  int findButton(Widget button) const;
  
  static void buttonCB(Widget, XtPointer, XtPointer);

  Widget prefshell, prefsheet, * prefparts;
  int numprefparts;

  struct {
    Pixmap ortho, ortho_ins;
    Pixmap perspective, perspective_ins;
  } pixmaps;

#endif // ! __COIN_SOXT__

#ifdef __COIN_SOGTK__
private:
  void constructor(const SbBool build);
#endif // ! __COIN_SOGTK__

#ifdef __COIN_SOWIN__
protected:
  virtual LRESULT onCommand(HWND window,UINT message,
                            WPARAM wparam, LPARAM lparam);
  virtual void buildViewerButtonsEx(HWND parent, int x, int y, int size);  
#endif // ! __COIN_SOWIN__
};

#endif // ! SO@GUI@PLANEVIEWER_H
