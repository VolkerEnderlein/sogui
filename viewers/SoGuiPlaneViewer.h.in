/**************************************************************************
 *
 *  This file is part of the Coin So@Gui@ GUI binding library.
 *  Copyright (C) 1998-2000 by Systems in Motion.  All rights reserved.
 *
 *  This library is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License version
 *  2.1 as published by the Free Software Foundation.  See the file
 *  LICENSE.LGPL at the root directory of the distribution for all the
 *  details.
 *
 *  If you want to use Coin So@Gui@ for applications not compatible with the
 *  LGPL, please contact SIM to acquire a Professional Edition License.
 *
 *  Systems in Motion, Prof Brochs gate 6, N-7030 Trondheim, NORWAY
 *  http://www.sim.no/ support@sim.no Voice: +47 22114160 Fax: +47 22207097
 *
 **************************************************************************/

// $Id$

#ifndef SO@GUI@_PLANEVIEWER_H
#define SO@GUI@_PLANEVIEWER_H

// FIXME: just a tmp thing to get hold of __COIN_SO*__
// defines. 20020109 mortene.
#include <Inventor/@Gui@/So@Gui@Basic.h>

// FIXME!: merge the So*PlaneViewer definitions. 20020111 mortene.

#ifdef __COIN_SOQT__
class QPushButton;
class QPixmap;
class SbPlaneProjector;
class SoAnyPlaneViewer;

#include <Inventor/Qt/viewers/SoQtFullViewer.h>

// ************************************************************************

class SOQT_DLL_API SoQtPlaneViewer : public SoQtFullViewer {
  SOQT_OBJECT_HEADER(SoQtPlaneViewer, SoQtFullViewer);
  friend class SoAnyPlaneViewer;
  Q_OBJECT

public:
  SoQtPlaneViewer(
    QWidget * parent = NULL,
    const char * const name = NULL, 
    SbBool embed = TRUE, 
    SoQtFullViewer::BuildFlag flag = BUILD_ALL, 
    SoQtViewer::Type type = BROWSER);
  ~SoQtPlaneViewer(void);

  virtual void setViewing(SbBool enable);
  virtual void setCamera(SoCamera * camera);
  virtual void setCursorEnabled(SbBool enable);

protected:
  SoQtPlaneViewer(
    QWidget * parent,
    const char * const name, 
    SbBool embed, 
    SoQtFullViewer::BuildFlag flag, 
    SoQtViewer::Type type, 
    SbBool build);

  QWidget * buildWidget(QWidget * parent);

  virtual const char * getDefaultWidgetName(void) const;
  virtual const char * getDefaultTitle(void) const;
  virtual const char * getDefaultIconTitle(void) const;

  virtual SbBool processSoEvent(const SoEvent * const event);
  virtual void processEvent(QEvent * event);
  virtual void setSeekMode(SbBool enable);
  virtual void actualRedraw(void);

  virtual void bottomWheelMotion(float value);
  virtual void leftWheelMotion(float value);
  virtual void rightWheelMotion(float value);

  virtual void createPrefSheet(void);

  virtual void createViewerButtons(QWidget * parent, SbPList * buttons);
  virtual void openViewerHelpCard(void);
  virtual void computeSeekFinalOrientation(void);

private:
  void constructor(SbBool buildNow);

  enum PlaneViewerMode {
    IDLE_MODE,

    DOLLY_MODE,
    TRANSLATE_MODE,

    ROTZ_WAIT_MODE,
    ROTZ_MODE,

    SEEK_WAIT_MODE,
    SEEK_MODE
  } mode;

  void setModeFromState(unsigned int state);
  void setMode(PlaneViewerMode mode);

  SbVec2f prevMousePosition;

  SbPlaneProjector * projector;

  struct {
    QPushButton * x, * y, * z;
    QPushButton * camera;
  } buttons;

  struct {
    QPixmap * orthogonal, * perspective;
  } pixmaps;

  static void visibilityCB(void * data, SbBool visible);

  SoAnyPlaneViewer * const common;

private slots:
  void xClicked(void);
  void yClicked(void);
  void zClicked(void);
  void cameraToggleClicked(void);

};
#endif // ! __COIN_SOQT__

#ifdef __COIN_SOXT__
class SbPlaneProjector;
class SoAnyPlaneViewer;
struct SoXtViewerButton;

#include <Inventor/Xt/viewers/SoXtFullViewer.h>

// *************************************************************************

class SOXT_DLL_API SoXtPlaneViewer : public SoXtFullViewer {
  SOXT_OBJECT_HEADER(SoXtPlaneViewer, SoXtFullViewer);
  friend class SoAnyPlaneViewer;

public:
  SoXtPlaneViewer(
    Widget parent = NULL,
    const char * const name = NULL,
    SbBool embed = TRUE,
    SoXtFullViewer::BuildFlag flag = BUILD_ALL,
    SoXtViewer::Type type = BROWSER);
  ~SoXtPlaneViewer(void);

  virtual void setViewing(SbBool enable);
  virtual void setCamera(SoCamera * camera);
  virtual void setCursorEnabled(SbBool enable);

protected:
  SoXtPlaneViewer(
    Widget parent,
    const char * const name,
    SbBool embed,
    SoXtFullViewer::BuildFlag flag,
    SoXtViewer::Type type,
    SbBool buildNow);

  virtual const char * getDefaultWidgetName(void) const;
  virtual const char * getDefaultTitle(void) const;
  virtual const char * getDefaultIconTitle(void) const;

  virtual SbBool processSoEvent(const SoEvent * const event);
  virtual void processEvent(XAnyEvent * event);
  virtual void setSeekMode(SbBool enable);
  virtual void actualRedraw(void);

  virtual void bottomWheelMotion(float value);
  virtual void leftWheelMotion(float value);
  virtual void rightWheelMotion(float value);

  virtual void createPrefSheet(void);
  virtual void createViewerButtons(Widget parent, SbPList * buttonlist);
  virtual void openViewerHelpCard(void);

private:
  void constructor(SbBool build);

  static SoXtViewerButton SoXtPlaneViewerButtons[];
  SoXtViewerButton * buttons;
  int findButton(Widget button) const;
  
  static void buttonCB(Widget, XtPointer, XtPointer);

  Widget prefshell, prefsheet, * prefparts;
  int numprefparts;

  struct {
    Pixmap ortho, ortho_ins;
    Pixmap perspective, perspective_ins;
  } pixmaps;

  SoAnyPlaneViewer * const common;

};
#endif // ! __COIN_SOXT__

#ifdef __COIN_SOGTK__
#include <Inventor/Gtk/viewers/SoGtkFullViewer.h>

// class SbPlaneProjector;

// *************************************************************************

class SOGTK_DLL_API SoGtkPlaneViewer : public SoGtkFullViewer {
  SOGTK_OBJECT_HEADER(SoGtkPlaneViewer, SoGtkFullViewer);

public:
  SoGtkPlaneViewer(
    GtkWidget * parent = (GtkWidget *) 0,
    const char * const name = (char *) 0,
    const SbBool embed = TRUE,
    const SoGtkFullViewer::BuildFlag flag = SoGtkFullViewer::BUILD_ALL,
    const SoGtkViewer::Type type = SoGtkViewer::BROWSER);
  ~SoGtkPlaneViewer(void);

  // overloaded
  virtual void setViewing(SbBool enable);
  virtual void setCamera(SoCamera * camera);
  virtual void setCursorEnabled(SbBool enable);

protected:
  SoGtkPlaneViewer(
    GtkWidget * parent,
    const char * const name,
    const SbBool embed,
    const SoGtkFullViewer::BuildFlag flag,
    const SoGtkViewer::Type type,
    const SbBool build);

  GtkWidget * buildWidget(GtkWidget * parent);

  virtual const char * getDefaultWidgetName(void) const;
  virtual const char * getDefaultTitle(void) const;
  virtual const char * getDefaultIconTitle(void) const;

  virtual SbBool processSoEvent(const SoEvent * const event);
  virtual void processEvent(GdkEvent * event);
  virtual void setSeekMode(SbBool enable);
  virtual void actualRedraw(void);

  virtual void bottomWheelMotion(float value);
  virtual void leftWheelMotion(float value);
  virtual void rightWheelMotion(float value);

  virtual void createViewerButtons(GtkWidget * parent, SbPList * buttons);
  virtual void openViewerHelpCard(void);

private:
  void constructor(const SbBool build);

  void setCursorRepresentation(int mode);
private:
  // friends and family
  class SoAnyPlaneViewer * common;
  friend class SoAnyPlaneViewer;
  class SoGtkPlaneViewerP * pimpl;
  friend class SoGtkPlaneViewerP;

};
#endif // ! __COIN_SOGTK__

#ifdef __COIN_SOWIN__
class SbPlaneProjector;
class SoAnyPlaneViewer;
class SoWinPlaneViewerP;

#include <Inventor/Win/viewers/SoWinFullViewer.h>

// ************************************************************************

class SOWIN_DLL_API SoWinPlaneViewer : public SoWinFullViewer {
  
  SOWIN_OBJECT_HEADER(SoWinPlaneViewer, SoWinFullViewer);
  friend class SoAnyPlaneViewer;
  friend class SoWinPlaneViewerP;

public:
  
  SoWinPlaneViewer(
    HWND parent = NULL,
    const char * const name = NULL, 
    SbBool embed = TRUE, 
    SoWinFullViewer::BuildFlag flag = BUILD_ALL, 
    SoWinViewer::Type type = BROWSER);
  ~SoWinPlaneViewer(void);

  virtual void setViewing(SbBool enable);
  virtual void setCamera(SoCamera * camera);
  virtual void setCursorEnabled(SbBool enable);

protected:
  
  SoWinPlaneViewer(
    HWND parent,
    const char * const name, 
    SbBool embed, 
    SoWinFullViewer::BuildFlag flag, 
    SoWinViewer::Type type, 
    SbBool build);

  HWND buildWidget(HWND parent);

  virtual const char * getDefaultWidgetName(void) const;
  virtual const char * getDefaultTitle(void) const;
  virtual const char * getDefaultIconTitle(void) const;

  virtual SbBool processSoEvent(const SoEvent * const event);

  virtual LRESULT onCommand(HWND window,
                             UINT message,
                             WPARAM wparam,
                             LPARAM lparam);

  virtual void setSeekMode(SbBool enable);
  virtual void actualRedraw(void);

  virtual void bottomWheelMotion(float value);
  virtual void leftWheelMotion(float value);
  virtual void rightWheelMotion(float value);

  virtual void createPrefSheet(void);

  virtual void buildViewerButtonsEx(HWND parent, int x, int y, int size);  
  virtual void openViewerHelpCard(void);
  virtual void computeSeekFinalOrientation(void);

private:
  
  SoAnyPlaneViewer * common;
  SoWinPlaneViewerP * pimpl;
  
};
#endif // ! __COIN_SOWIN__

#endif // ! SO@GUI@_PLANEVIEWER_H
