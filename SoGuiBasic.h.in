/**************************************************************************
 *
 *  This file is part of the Coin GUI binding libraries.
 *  Copyright (C) 2000 by Systems in Motion.  All rights reserved.
 *
 *  The libraries this file is part of is free software; you can
 *  redistribute them and/or modify them under the terms of the GNU
 *  Lesser General Public License version 2.1 as published by the
 *  Free Software Foundation.  See the file LICENSE.LGPL at the root
 *  directory of the distribution for all the details.
 *
 *  If you want to use the Coin GUI binding libraries for applications
 *  not compatible with the LGPL, contact SIM about acquiring a
 *  Professional Edition License.
 *
 *  Systems in Motion, Prof Brochs gate 6, N-7030 Trondheim, NORWAY
 *  http://www.sim.no/ support@sim.no Voice: +47 22114160 Fax: +47 22207097
 *
 **************************************************************************/

// @configure_input@
// $Id$

#ifndef SO@GUI@_BASIC_H
#define SO@GUI@_BASIC_H

/*!
  \defgroup devices @Gui@ Device Classes
*/

/*!
  \defgroup components @Gui@ Components
*/

/*!
  \defgroup viewers @Gui@ Viewer Components
*/

/*!
  \defgroup editors @Gui@ Editor Components
*/

/*!
  \defgroup slidersets @Gui@ Slider Set Components
*/

/*!
  \defgroup misc Miscellaneous Classes
*/

/*!
  \defgroup common Common Code
*/

// *************************************************************************

template <class Type>
inline Type So@Gui@Min( Type a, Type b ) { return (b < a) ? b : a; }

template <class Type>
inline Type So@Gui@Max( Type a, Type b ) { return (b > a) ? b : a; }

template <class Type>
inline Type So@Gui@Clamp( Type val, Type min, Type max )
  { return So@Gui@Max( min, So@Gui@Min( max, val ) ); }

template <class Type>
inline void So@Gui@Swap( Type & a, Type & b ) { Type t = a; a = b; b = t; }

// *************************************************************************

#define __COIN_SO@GUI@__

#if ! defined(SO@GUI@_MAJOR_VERSION)
#undef SO@GUI@_MAJOR_VERSION
#endif /* ! SO@GUI@_MAJOR_VERSION */
#if ! defined(SO@GUI@_MINOR_VERSION)
#undef SO@GUI@_MINOR_VERSION
#endif /* ! SO@GUI@_MINOR_VERSION */
#if ! defined(SO@GUI@_MICRO_VERSION)
#undef SO@GUI@_MICRO_VERSION
#endif /* ! SO@GUI@_MICRO_VERSION */
#if ! defined(SO@GUI@_VERSION)
#undef SO@GUI@_VERSION
#endif /* ! SO@GUI@_VERSION */

// *************************************************************************

/* Precaution to avoid an error easily made by the application programmer. */
#ifdef SO@GUI@_DLL_API
# error Leave the internal SO@GUI@_DLL_API define alone.
#endif /* SO@GUI@_DLL_API */

/*
  On MSWindows platforms, one of these defines must always be set:

   - "SO@GUI@_MAKE_DLL", only when building the library itself. Taken
     care of automatically by the configure / build process.

   - "SO@GUI@_DLL", when application programmers are using the library
     in the form of a dynamic link library (DLL)

   - "SO@GUI@_NOT_DLL", when application programmers are using the
     library in the form of a static object library (LIB)

  Note that either SO@GUI@_DLL or SO@GUI@_NOT_DLL _must_ be defined by
  the application programmer on MSWindows platforms, or else the
  #error statement will hit. Set up one or the other of these two
  defines in your compiler environment according to how the library
  was built -- as a DLL (use "SO@GUI@_DLL") or as a LIB (use
  "SO@GUI@_NOT_DLL").

  (Setting up defines for the compiler is typically done by either
  adding something like "/DSO@GUI@_DLL" to the compiler's argument
  line (for command-line build processes), or by adding the define to
  the list of preprocessor symbols in your IDE GUI (in the MSVC IDE,
  this is done from the "Project"->"Settings" menu, choose the "C/C++"
  tab, then "Preprocessor" from the dropdown box and add the
  appropriate define)).

  It is extremely important that the application programmer uses the
  correct define, as using "SO@GUI@_NOT_DLL" when "SO@GUI@_DLL" is
  correct is likely to cause mysterious crashes.
 */
#if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__NT__)
/* Enable to generate SO@GUI@.DLL (under Win32). */
# ifdef SO@GUI@_MAKE_DLL
#  define SO@GUI@_DLL_API __declspec(dllexport)
# else /* !SO@GUI@_MAKE_DLL */
/* Enable to build against SO@GUI@.DLL (under Win32). */
#  ifdef SO@GUI@_DLL
#   define SO@GUI@_DLL_API __declspec(dllimport)
#  else /* !SO@GUI@_DLL */
#   ifndef SO@GUI@_NOT_DLL
#    error Define either SO@GUI@_DLL or SO@GUI@_NOT_DLL as appropriate for your linkage! See Inventor/@Gui@/So@Gui@Basic.h for further instructions.
#   endif /* SO@GUI@_NOT_DLL */
#  endif /* !SO@GUI@_DLL */
# endif /* !SO@GUI@_MAKE_DLL */
#endif /* Microsoft Windows */

/* Empty define to avoid errors when _not_ compiling an MSWindows DLL. */
#ifndef SO@GUI@_DLL_API
# define SO@GUI@_DLL_API
#endif /* !SO@GUI@_DLL_API */

#endif // ! SO@GUI@_BASIC_H
