/**************************************************************************\
 *
 *  This file is part of the Coin GUI toolkit libraries.
 *  Copyright (C) 1998-2002 by Systems in Motion.  All rights reserved.
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  version 2.1 as published by the Free Software Foundation.  See the
 *  file LICENSE.LGPL at the root directory of this source distribution
 *  for more details.
 *
 *  If you want to use this library with software that is incompatible
 *  licensewise with the LGPL, and / or you would like to take
 *  advantage of the additional benefits with regard to our support
 *  services, please contact Systems in Motion about acquiring a Coin
 *  Professional Edition License.  See <URL:http://www.coin3d.org> for
 *  more information.
 *
 *  Systems in Motion, Prof Brochs gate 6, 7030 Trondheim, NORWAY
 *  <URL:http://www.sim.no>, <mailto:support@sim.no>
 *
\**************************************************************************/

#ifndef SO@GUI@_DEVICE_H
#define SO@GUI@_DEVICE_H

#include <Inventor/SbLinear.h>
#include <Inventor/@Gui@/So@Gui@Object.h>

class SoEvent;

// *************************************************************************

#ifdef __COIN_SOQT__
#include <qevent.h>
typedef void So@Gui@EventHandler(@WIDGET@, void *, @EVENT@, bool *);
#endif // __COIN_SOQT__

// *************************************************************************

typedef void So@Gui@EventHandler(@WIDGET@, void *, @EVENT@, bool *);

class SO@GUI@_DLL_API So@Gui@Device : public So@Gui@Object {
  SO@GUI@_OBJECT_ABSTRACT_HEADER(So@Gui@Device, So@Gui@Object);

public:
  virtual ~So@Gui@Device();

  virtual void enable(@WIDGET@ w, So@Gui@EventHandler * handler, void * closure) = 0;
  virtual void disable(@WIDGET@ w, So@Gui@EventHandler * handler, void * closure) = 0;

  virtual const SoEvent * translateEvent(@EVENT@ event) = 0;

  void setWindowSize(const SbVec2s size);
  SbVec2s getWindowSize(void) const;

  static void initClasses(void);

protected:
  So@Gui@Device(void);

  void setEventPosition(SoEvent * event, int x, int y) const;
  static SbVec2s getLastEventPosition(void);

  void addEventHandler(@WIDGET@, So@Gui@EventHandler *, void *);
  void removeEventHandler(@WIDGET@, So@Gui@EventHandler *, void *);
  void invokeHandlers(@EVENT@ event);

private:
  class So@Gui@DeviceP * pimpl;
  friend class So@Gui@DeviceP;
};

// *************************************************************************

#endif // !SO@GUI@_DEVICE_H
