/**************************************************************************\
 *
 *  This file is part of the Coin GUI toolkit libraries.
 *  Copyright (C) 1998-2002 by Systems in Motion.  All rights reserved.
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  version 2.1 as published by the Free Software Foundation.  See the
 *  file LICENSE.LGPL at the root directory of this source distribution
 *  for more details.
 *
 *  If you want to use this library with software that is incompatible
 *  licensewise with the LGPL, and / or you would like to take
 *  advantage of the additional benefits with regard to our support
 *  services, please contact Systems in Motion about acquiring a Coin
 *  Professional Edition License.  See <URL:http://www.coin3d.org> for
 *  more information.
 *
 *  Systems in Motion, Prof Brochs gate 6, 7030 Trondheim, NORWAY
 *  <URL:http://www.sim.no>, <mailto:support@sim.no>
 *
\**************************************************************************/

#ifndef SO@GUI@_MOUSE_H
#define SO@GUI@_MOUSE_H

#include <Inventor/@Gui@/devices/So@Gui@Device.h>
// FIXME: this include only needed because of SoWin-specific private
// functions -- get rid of it after fixing up the header file to be a
// 100% "pure" template. 20011210 mortene.
#include <Inventor/events/SoButtonEvent.h>

class SoMouseButtonEvent;
class SoLocation2Event;

// *************************************************************************

class SO@GUI@_DLL_API So@Gui@Mouse : public So@Gui@Device {
  SO@GUI@_OBJECT_HEADER(So@Gui@Mouse, So@Gui@Device);

public:
  enum Events {
    // FIXME: check if the define matches with X11 is really
    // necessary. If not, remove the comments below, if so, document
    // properly this dependency. 20011229 mortene.

    BUTTON_PRESS    = 0x01, // matches X11's ButtonPressMask define
    BUTTON_RELEASE  = 0x02, // matches X11's ButtonReleaseMask define
    POINTER_MOTION  = 0x04, // matches X11's PointerMotionMask define
    BUTTON_MOTION   = 0x08, // matches X11's ButtonMotionMask define

    ALL_EVENTS = BUTTON_PRESS | BUTTON_RELEASE | POINTER_MOTION | BUTTON_MOTION
  };

  So@Gui@Mouse(int eventmask = ALL_EVENTS);
  virtual ~So@Gui@Mouse(void);

  virtual void enable(@WIDGET@ widget, So@Gui@EventHandler * handler,
                      void * closure);
  virtual void disable(@WIDGET@ widget, So@Gui@EventHandler * handler,
                       void * closure);

  virtual const SoEvent * translateEvent(@EVENT@ event);

private:
  SoMouseButtonEvent * buttonevent;
  SoLocation2Event * locationevent;
  int eventmask;

#ifdef __COIN_SOWIN__ // FIXME: make a "pure" template. 20011210 mortene.
  SoLocation2Event * makeLocationEvent(MSG * msg);
  SoMouseButtonEvent * makeButtonEvent(MSG * msg, SoButtonEvent::State state);
#endif // __COIN_SOWIN__
#ifdef __COIN_SOXT__ // FIXME: make a "pure" template. 20011210 mortene.
  SoLocation2Event * makeLocationEvent(XMotionEvent * event);
  SoMouseButtonEvent * makeButtonEvent(XButtonEvent * event, SoButtonEvent::State state);
#endif // __COIN_SOXT__
}; // class So@Gui@Mouse

// *************************************************************************

#endif // ! SO@GUI@_MOUSE_H
