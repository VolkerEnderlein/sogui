/**************************************************************************\
 *
 *  This file is part of the Coin family of 3D visualization libraries.
 *  Copyright (C) 1998-2002 by Systems in Motion.  All rights reserved.
 *
 *  This library is free software; you can redistribute it and / or
 *  modify it under the terms of the GNU General Public License
 *  version 2 as published by the Free Software Foundation.  See the
 *  file LICENSE.GPL at the root directory of this source distribution
 *  for more details.
 *
 *  If you desire to use this library in software that is incompatible
 *  with the GNU GPL, and / or you would like to take advantage of the
 *  additional benefits with regard to our support services, please
 *  contact Systems in Motion about acquiring a Coin Professional
 *  Edition License.  See <URL:http://www.coin3d.org> for more
 *  information.
 *
 *  Systems in Motion, Prof Brochs gate 6, 7030 Trondheim, NORWAY
 *  <URL:http://www.sim.no>, <mailto:support@sim.no>
 *
\**************************************************************************/

#ifndef SO@GUI@_INTERNALDEFS_H
#define SO@GUI@_INTERNALDEFS_H

/* ********************************************************************** */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif /* HAVE_CONFIG_H */

/* ********************************************************************** */

#ifdef __FILE__
#define SO@GUI@_STUB_FILE __FILE__
#else
/* FIXME: avoid this case by redefining the compilation rules to define the
   current filename in some variable.  [20010919 larsa] */
#define SO@GUI@_STUB_FILE ((char *)0L)
#endif

#ifdef __LINE__
#define SO@GUI@_STUB_LINE __LINE__
#else
#define SO@GUI@_STUB_LINE 0
#endif

#if HAVE_VAR___PRETTY_FUNCTION__
#define SO@GUI@_STUB_FUNC __PRETTY_FUNCTION__
#else
#if HAVE_VAR___FUNCTION__
#define SO@GUI@_STUB_FUNC __FUNCTION__
#else
#if HAVE_VAR___func__
#define SO@GUI@_STUB_FUNC __func__
#else
#define SO@GUI@_STUB_FUNC ((char *)0L)
#endif
#endif
#endif

#if SO@GUI@_DEBUG

#include <Inventor/errors/SoDebugError.h>

/*
  This stupid thing is here to silence some compilers that complain on
  constant if-expressions.
*/

inline int so@gui@_not_null(const void * arg) { return (arg != NULL) ? 1 : 0; }


/* Collects common code from SO@GUI@_STUB(), SO@GUI@_STUB()_ONCE and
   SO@GUI@_OBSOLETED(). */

#define SO@GUI@_FUNCTIONIDENTIFIER(SO@GUI@STR) \
    SbString SO@GUI@STR(so@gui@_not_null(SO@GUI@_STUB_FILE) ? SO@GUI@_STUB_FILE : ""); \
    if (SO@GUI@STR.getLength() > 0) { SO@GUI@STR += ':'; } \
    SO@GUI@STR += SbString((int)SO@GUI@_STUB_LINE); SO@GUI@STR += ':'; \
    SO@GUI@STR += so@gui@_not_null(SO@GUI@_STUB_FUNC) ? SO@GUI@_STUB_FUNC : ""

/*
  SO@GUI@_STUB(): a macro that prints out stub information.
  Used where there is functionality missing.
*/

#define SO@GUI@_STUB() \
  do { \
    SO@GUI@_FUNCTIONIDENTIFIER(s); \
    SoDebugError::postWarning(s.getString(), \
                              "STUB: functionality not yet completed"); \
  } while (0)

/*
  SO@GUI@_STUB_ONCE(): a macro that prints out stub information, but only on
  the first pass.  Used where there is functionality missing that may be
  called hundreds of times.
*/

#define SO@GUI@_STUB_ONCE() \
  do { \
    static int first = 1; \
    if (first) { \
      SO@GUI@_FUNCTIONIDENTIFIER(s); \
      SoDebugError::postWarning(s.getString(), \
                                "STUB: functionality not yet completed " \
                                "(first and last warning)"); \
      first = 0; \
    } \
  } while (0)

/*
  SO@GUI@_OBSOLETED(): a macro that prints out information about an obsoleted
  function still being in use.
*/

#define SO@GUI@_OBSOLETED() \
  do { \
    SO@GUI@_FUNCTIONIDENTIFIER(s); \
    SoDebugError::post(s.getString(), \
                       "OBSOLETED: functionality no longer supported"); \
  } while (0)

#else /* !SO@GUI@_DEBUG */

/* snub the stubs */
#define SO@GUI@_STUB()      do { } while (0)
#define SO@GUI@_STUB_ONCE() do { } while (0)
#define SO@GUI@_OBSOLETED() do { } while (0)

#endif /* !SO@GUI@_DEBUG */

/*
  GETTEXT support
*/

#if defined(ENABLE_NLS) && defined(HAVE_GETTEXT)
#include <libintl.h>
#define _(String) dgettext (PACKAGE, String)
#define N_(String) (String)
#else
#define _(String) (String)
#define N_(String) (String)
#endif /* HAVE_GETTEXT && ENABLE_NLS */

/* ********************************************************************** */

#endif /* ! SO@GUI@_INTERNALDEFS_H */
