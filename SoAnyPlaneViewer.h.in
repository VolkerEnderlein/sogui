/**************************************************************************
 *
 *  This file is part of the Coin GUI binding libraries.
 *  Copyright (C) 2000 by Systems in Motion.  All rights reserved.
 *
 *  The libraries this file is part of is free software; you can
 *  redistribute them and/or modify them under the terms of the GNU
 *  Lesser General Public License version 2.1 as published by the
 *  Free Software Foundation.  See the file LICENSE.LGPL at the root
 *  directory of the distribution for all the details.
 *
 *  If you want to use the Coin GUI binding libraries for applications
 *  not compatible with the LGPL, contact SIM about acquiring a
 *  Professional Edition License.
 *
 *  Systems in Motion, Prof Brochs gate 6, N-7030 Trondheim, NORWAY
 *  http://www.sim.no/ support@sim.no Voice: +47 22114160 Fax: +47 22207097
 *
 **************************************************************************/

// @configure_input@
// $Id$

#ifndef SOANY_PLANEVIEWER_H
#define SOANY_PLANEVIEWER_H

#include <Inventor/SbLinear.h>

class SoCamera;
class SoEvent;

class So@Gui@PlaneViewer;

// ************************************************************************

class SoAnyPlaneViewer {
  friend class So@Gui@PlaneViewer;

public:
  SoAnyPlaneViewer(So@Gui@PlaneViewer * const viewer);
  ~SoAnyPlaneViewer(void);

  void translateX(const float delta) const;
  void translateY(const float delta) const;
  void rotateZ(const float angle) const;

  void viewPlaneX(void) const;
  void viewPlaneY(void) const;
  void viewPlaneZ(void) const;

  void zoom(const float difference) const;

  void setCanvasSize(const SbVec2s size);
  void setPointerLocation(const SbVec2s location);
  int getPointerXMotion(void) const;
  int getPointerYMotion(void) const;
  float getPointerOrigoAngle(void) const;
  float getPointerOrigoMotionAngle(void) const;

  void drawRotateGraphics(void) const;

  SbBool processSoEvent(const SoEvent * const event);

protected:
  enum PlaneViewerMode {
    IDLE_MODE,

    DOLLY_MODE,
    TRANSLATE_MODE,

    ROTZ_WAIT_MODE,
    ROTZ_MODE,

    SEEK_WAIT_MODE,
    SEEK_MODE
  } mode;

private:
  So@Gui@PlaneViewer * const viewer;

  struct pointerdata {
    SbVec2s now;
    SbVec2s then;
  } pointer;
  SbVec2s canvas;

  SbBool controldown;
  SbBool button1down;
  SbBool button2down;
  SbBool button3down;
}; // class SoAnyPlaneViewer

// ************************************************************************

#endif // ! SOANY_PLANEVIEWER_H
