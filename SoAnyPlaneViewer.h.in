/**************************************************************************\
 *
 *  Copyright (C) 2000 by Systems in Motion.  All rights reserved.
 *
 *  This file is part of the Coin library.
 *
 *  This file may be distributed under the terms of the Q Public License
 *  as defined by Troll Tech AS of Norway and appearing in the file
 *  LICENSE.QPL included in the packaging of this file.
 *
 *  If you want to use Coin in applications not covered by licenses
 *  compatible with the QPL, you can contact SIM to aquire a
 *  Professional Edition license for Coin.
 *
 *  Systems in Motion AS, Prof. Brochs gate 6, N-7030 Trondheim, NORWAY
 *  http://www.sim.no/ sales@sim.no Voice: +47 22114160 Fax: +47 67172912
 *
\**************************************************************************/

//  @configure_input@
//  $Id$

#ifndef SOANY_PLANEVIEWER_H
#define SOANY_PLANEVIEWER_H

#include <Inventor/SbLinear.h>

class SoCamera;
class So@GUI@PlaneViewer;

// ************************************************************************

class SoAnyPlaneViewer {
public:
  SoAnyPlaneViewer( So@GUI@PlaneViewer * const viewer );
  ~SoAnyPlaneViewer(void);

  void translateX( const float delta ) const;
  void translateY( const float delta ) const;
  void rotateZ( const float angle ) const;

  void viewPlaneX(void) const;
  void viewPlaneY(void) const;
  void viewPlaneZ(void) const;

  void setCanvasSize( const SbVec2s size );
  void setPointerLocation( const SbVec2s location );
  int getPointerXMotion(void) const;
  int getPointerYMotion(void) const;
  float getPointerOrigoAngle(void) const;
  float getPointerOrigoMotionAngle(void) const;

  void drawRotateGraphics(void) const;

  // old interface
  float transYWheelMotion( const float value, const float oldvalue,
    SoCamera * const camera );
  float transXWheelMotion( const float value, const float oldvalue,
    SoCamera * const camera );
  void rotZ( SbVec2f position, SbVec2f oldposition, float aspectratio,
    SoCamera * const camera );

  void viewPlaneX( SoCamera * const camera );
  void viewPlaneY( SoCamera * const camera );
  void viewPlaneZ( SoCamera * const camera );

private:
  So@GUI@PlaneViewer * const viewer;

  struct {
    SbVec2s now;
    SbVec2s then;
  } pointer;
  SbVec2s canvas;

}; // class SoAnyPlaneViewer

// ************************************************************************

#endif // ! SOANY_PLANEVIEWER_H
