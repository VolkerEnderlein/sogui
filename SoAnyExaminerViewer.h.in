/**************************************************************************\
 *
 *  Copyright (C) 2000 by Systems in Motion.  All rights reserved.
 *
 *  This file is part of the Coin library.
 *
 *  This file may be distributed under the terms of the Q Public License
 *  as defined by Troll Tech AS of Norway and appearing in the file
 *  LICENSE.QPL included in the packaging of this file.
 *
 *  If you want to use Coin in applications not covered by licenses
 *  compatible with the QPL, you can contact SIM to aquire a
 *  Professional Edition license for Coin.
 *
 *  Systems in Motion AS, Prof. Brochs gate 6, N-7030 Trondheim, NORWAY
 *  http://www.sim.no/ sales@sim.no Voice: +47 22114160 Fax: +47 67172912
 *
\**************************************************************************/

//  @configure_input@
//  $Id$

#ifndef SOANY_EXAMINERVIEWER_H
#define SOANY_EXAMINERVIEWER_H

class SoCamera;
class SoTimerSensor;
class SbRotation;
class SbSphereSheetProjector;

class So@GUI@ExaminerViewer;

// ************************************************************************

class SoAnyExaminerViewer {
public:
  SoAnyExaminerViewer( So@GUI@ExaminerViewer * viewer );
  ~SoAnyExaminerViewer(void);

  void setAnimationEnabled( const SbBool enable );
  SbBool isAnimationEnabled(void) const;

  void stopAnimating(void);
  SbBool isAnimating(void) const;

  void setFeedbackVisibility( const SbBool enable );
  SbBool isFeedbackVisible(void) const;

  void setFeedbackSize( const int size );
  int getFeedbackSize(void) const;

protected:
  float rotXWheelMotion( float value, float old );
  float rotYWheelMotion( float value, float old );

  void reorientCamera( const SbRotation & rotation );
  void spin( const SbVec2f & mousepos );
  void pan( const SbVec2f & mousepos );
  void zoom( const float diffvalue );
  void zoomByCursor( const SbVec2f & mousepos );

  SbVec2f lastmouseposition;
  SbPlane panningplane;

  SbBool spinanimating;
  SbBool spinanimatingallowed;
  SbVec2f lastspinposition;
  int spinsamplecounter;
  SbRotation spinincrement;
  SoTimerSensor * spintimertrigger;
  SbSphereSheetProjector * spinprojector;

  void spintimertriggeredCallback( SoSensor * sensor );
  static void spintimertriggeredCB( void * data, SoSensor * sensor );

  SbBool axiscrossEnabled;
  int axiscrossSize;

  void drawAxisCross(void);
  static void drawArrow(void);

private:
  So@GUI@ExaminerViewer * const viewer;

}; // class SoAnyExaminerViewer

// ************************************************************************

#endif // ! SOANY_EXAMINERVIEWER_H
